import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from datetime import datetime
import os

# Streamlit page setup
st.set_page_config(page_title="Air Quality Analysis", layout="wide")
st.title("📊 Air Quality Dashboard")
st.markdown("This interactive dashboard explores air quality data from March 2004 to April 2005.")

# File path
file_path = 'cleaned_air_quality.csv'

# Load and clean data
@st.cache_data
def load_data(file_path):
    if not os.path.exists(file_path):
        raise FileNotFoundError(f"The file '{file_path}' does not exist.")
    df = pd.read_csv(file_path)

    # Combine Date and Time into a datetime column
    df['DateTime'] = pd.to_datetime(df['Date'] + ' ' + df['Time'], format='%d/%m/%Y %H.%M.%S', errors='coerce')
    df = df.dropna(subset=['DateTime'])

    # Replace -200 with NaN
    pollutants = ['CO(GT)', 'C6H6(GT)', 'NOx(GT)', 'NO2(GT)']
    df[pollutants] = df[pollutants].replace(-200, np.nan)

    # Drop rows with missing values
    df = df.dropna(subset=['DateTime', 'CO(GT)', 'C6H6(GT)', 'NOx(GT)', 'NO2(GT)', 'T', 'RH'])

    # Rename columns
    df = df[['DateTime', 'CO(GT)', 'C6H6(GT)', 'NOx(GT)', 'NO2(GT)', 'T', 'RH']].rename(
        columns={
            'CO(GT)': 'CO',
            'C6H6(GT)': 'C6H6',
            'NOx(GT)': 'NOx',
            'NO2(GT)': 'NO2',
            'T': 'Temperature',
            'RH': 'Humidity'
        }
    )
    return df

try:
    df = load_data(file_path)
except Exception as e:
    st.error(f"❌ {e}")
    st.stop()

# Aggregate daily data
daily_df = df.groupby(df['DateTime'].dt.date).agg({
    'CO': 'mean',
    'C6H6': 'mean',
    'NOx': 'mean',
    'NO2': 'mean',
    'Temperature': 'mean',
    'Humidity': 'mean'
}).reset_index()
daily_df['DateTime'] = pd.to_datetime(daily_df['DateTime'])

# --- Visualizations ---
st.subheader("1. Daily Average CO and Benzene Concentrations")

fig1, ax1 = plt.subplots(figsize=(12, 5))
ax1.plot(daily_df['DateTime'], daily_df['CO'], color='blue', label='CO (mg/m³)')
ax1.set_ylabel('CO (mg/m³)', color='blue')
ax1.tick_params(axis='y', labelcolor='blue')

ax2 = ax1.twinx()
ax2.plot(daily_df['DateTime'], daily_df['C6H6'], color='green', label='C6H6 (µg/m³)')
ax2.set_ylabel('C6H6 (µg/m³)', color='green')
ax2.tick_params(axis='y', labelcolor='green')

fig1.tight_layout()
st.pyplot(fig1)

st.subheader("2. NOx vs NO2 Scatter Plot")
fig2 = plt.figure(figsize=(8, 5))
sns.scatterplot(data=df, x='NOx', y='NO2', alpha=0.5)
plt.xlabel('NOx (ppb)')
plt.ylabel('NO2 (ppb)')
plt.title('NOx vs NO2 Concentrations')
st.pyplot(fig2)

st.subheader("3. Daily Average Temperature and Humidity")

fig3, ax1 = plt.subplots(figsize=(12, 5))
ax1.plot(daily_df['DateTime'], daily_df['Temperature'], color='orange', label='Temperature (°C)')
ax1.set_ylabel('Temperature (°C)', color='orange')
ax1.tick_params(axis='y', labelcolor='orange')

ax2 = ax1.twinx()
ax2.plot(daily_df['DateTime'], daily_df['Humidity'], color='purple', label='Humidity (%)')
ax2.set_ylabel('Humidity (%)', color='purple')
ax2.tick_params(axis='y', labelcolor='purple')

fig3.tight_layout()
st.pyplot(fig3)

# --- Summary Table ---
st.subheader("📋 Summary Table (First 10 Days of Daily Averages)")
summary_table = daily_df[['DateTime', 'CO', 'C6H6', 'NOx', 'NO2', 'Temperature', 'Humidity']].head(10)
summary_table = summary_table.round(2)
summary_table['DateTime'] = summary_table['DateTime'].dt.strftime('%Y-%m-%d')
st.dataframe(summary_table)

# --- Analysis Report ---
st.subheader("📘 Air Quality Analysis Report")

st.markdown("""
This analysis covers air quality data from **March 2004 to April 2005**, focusing on pollutants such as **CO, C6H6, NOx, and NO2**, along with **Temperature** and **Humidity**.
""")

st.markdown(f"""
- **Dataset Size**: {len(df):,} hourly records  
- **Time Period**: {df['DateTime'].min().strftime('%Y-%m-%d')} to {df['DateTime'].max().strftime('%Y-%m-%d')}
""")

st.markdown("""
### 🔍 Key Observations:
- CO and C6H6 levels **peak during evening hours (19:00–20:00)**, likely due to traffic or industrial activity.
- **NOx and NO2 show a strong correlation**, indicating common emission sources (e.g., vehicles).
""")

st.markdown(f"""
- Average **CO**: {daily_df['CO'].mean():.2f} mg/m³, Max: {daily_df['CO'].max():.2f} mg/m³  
- Average **C6H6**: {daily_df['C6H6'].mean():.2f} µg/m³, Max: {daily_df['C6H6'].max():.2f} µg/m³  
- **Temperature Range**: {daily_df['Temperature'].min():.2f}°C to {daily_df['Temperature'].max():.2f}°C  
- **Humidity Range**: {daily_df['Humidity'].min():.2f}% to {daily_df['Humidity'].max():.2f}%
""")

st.markdown("""
**📝 Conclusion:**  
Targeted interventions during peak evening hours could help reduce pollutant levels. Seasonal variations in temperature and humidity also influence how pollutants disperse.
""")
